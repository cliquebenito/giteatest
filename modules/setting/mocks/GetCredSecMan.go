// Code generated by mockery v2.49.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	vault_client "code.gitea.io/gitea/models/vault_client"
)

// GetCredSecMan is an autogenerated mock type for the GetCredSecMan type
type GetCredSecMan struct {
	mock.Mock
}

// GetCredFromSecManByVersionKey provides a mock function with given fields: configForKvGet
func (_m *GetCredSecMan) GetCredFromSecManByVersionKey(configForKvGet *vault_client.KeyValueConfigForGetSecrets) (*vault_client.SecretVaultResponse, error) {
	ret := _m.Called(configForKvGet)

	if len(ret) == 0 {
		panic("no return value specified for GetCredFromSecManByVersionKey")
	}

	var r0 *vault_client.SecretVaultResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*vault_client.KeyValueConfigForGetSecrets) (*vault_client.SecretVaultResponse, error)); ok {
		return rf(configForKvGet)
	}
	if rf, ok := ret.Get(0).(func(*vault_client.KeyValueConfigForGetSecrets) *vault_client.SecretVaultResponse); ok {
		r0 = rf(configForKvGet)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*vault_client.SecretVaultResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*vault_client.KeyValueConfigForGetSecrets) error); ok {
		r1 = rf(configForKvGet)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewGetCredSecMan creates a new instance of GetCredSecMan. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGetCredSecMan(t interface {
	mock.TestingT
	Cleanup(func())
}) *GetCredSecMan {
	mock := &GetCredSecMan{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UserConverterDb is an autogenerated mock type for the userConverterDb type
type UserConverterDb struct {
	mock.Mock
}

// GetUserNames provides a mock function with given fields: ids
func (_m *UserConverterDb) GetUserNames(ids []int64) []string {
	ret := _m.Called(ids)

	if len(ret) == 0 {
		panic("no return value specified for GetUserNames")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func([]int64) []string); ok {
		r0 = rf(ids)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// NewUserConverterDb creates a new instance of UserConverterDb. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserConverterDb(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserConverterDb {
	mock := &UserConverterDb{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

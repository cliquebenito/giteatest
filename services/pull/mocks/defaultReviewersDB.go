// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	context "context"

	default_reviewers "code.gitea.io/gitea/models/default_reviewers"
	mock "github.com/stretchr/testify/mock"
)

// DefaultReviewersDB is an autogenerated mock type for the defaultReviewersDB type
type DefaultReviewersDB struct {
	mock.Mock
}

// GetDefaultReviewers provides a mock function with given fields: ctx, settingID
func (_m *DefaultReviewersDB) GetDefaultReviewers(ctx context.Context, settingID int64) ([]*default_reviewers.DefaultReviewers, error) {
	ret := _m.Called(ctx, settingID)

	if len(ret) == 0 {
		panic("no return value specified for GetDefaultReviewers")
	}

	var r0 []*default_reviewers.DefaultReviewers
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int64) ([]*default_reviewers.DefaultReviewers, error)); ok {
		return rf(ctx, settingID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int64) []*default_reviewers.DefaultReviewers); ok {
		r0 = rf(ctx, settingID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*default_reviewers.DefaultReviewers)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(ctx, settingID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewDefaultReviewersDB creates a new instance of DefaultReviewersDB. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDefaultReviewersDB(t interface {
	mock.TestingT
	Cleanup(func())
}) *DefaultReviewersDB {
	mock := &DefaultReviewersDB{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
